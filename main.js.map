{"version":3,"sources":["./src/app/store/effects/posts.effects.ts","./src/app/components/table/table.component.ts","./src/app/components/table/table.component.html","./src/app/shared/sortables/directives/sortables.directive.ts","./src/environments/environment.ts","./src/app/services/json-placeholder/posts.service.ts","./src/app/store/reducers/posts.reducer.ts","./src/app/shared/shared.module.ts","./src/app/components/table/table.store.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/table/table.module.ts","./src/app/app.module.ts","./src/app/components/table/components/table-search/table-search.component.ts","./src/app/components/table/components/table-search/table-search.component.html","./src/app/store/actions/posts.actions.ts","./src/app/shared/sortables/components/sortable/sortable.component.ts","./src/app/shared/sortables/components/sortable/sortable.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\n\nimport { PostsService } from \"../../services/json-placeholder/posts.service\";\n\nimport { of } from \"rxjs\";\nimport { mergeMap, map, catchError } from \"rxjs/operators\";\n\nimport * as postsActions from \"../actions/posts.actions\";\n\n@Injectable()\nexport class PostsEffects {\n  loadPosts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(postsActions.load),\n      mergeMap(() =>\n        this.postsService.getAll().pipe(\n          map(posts => postsActions.loadedSuccess({ posts })),\n          catchError(() => of(postsActions.loadedError()))\n        )\n      )\n    )\n  );\n\n  constructor(private actions$: Actions, private postsService: PostsService) {}\n}\n","import { CdkDragDrop } from \"@angular/cdk/drag-drop\";\nimport { ChangeDetectionStrategy, Component, Input, OnInit } from \"@angular/core\";\n\nimport { DataColName, DataRow, TableStore } from \"./table.store\";\n\nimport { Sortings } from \"../../shared/sortables/models/sortings.model\";\n\n@Component({\n  selector: \"app-table\",\n  templateUrl: \"./table.component.html\",\n  styleUrls: [\"./table.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TableStore],\n})\nexport class TableComponent implements OnInit {\n  @Input() set dataRows(value: DataRow[] | null) {\n    // TODO: get rid of null\n    this.tableStore.updateDataRows(value || []);\n  }\n\n  vm$ = this.tableStore.vm$;\n\n  onSearchTermChanged(dataCol: DataColName, term: string) {\n    this.tableStore.updateSearchTerm({ dataCol, term });\n  }\n\n  onCdkDropListDropped(cdkDragDrop: CdkDragDrop<HTMLTableRowElement>) {\n    const { previousIndex, currentIndex } = cdkDragDrop;\n    this.tableStore.moveDataCol({ previousIndex, currentIndex });\n  }\n\n  onSortingsChanged(sortings: Sortings) {\n    this.tableStore.updateSorting(Object.entries(sortings).map(([dataCol, sorting]) => ({ dataCol, sorting })));\n  }\n\n  constructor(private tableStore: TableStore) {}\n\n  ngOnInit(): void {}\n}\n","<table *ngIf=\"vm$ | async as vm\">\n  <thead>\n    <tr\n      cdkDropList\n      cdkDropListOrientation=\"horizontal\"\n      (cdkDropListDropped)=\"onCdkDropListDropped($event)\"\n      appSortables\n      (sortingsChange)=\"onSortingsChanged($event)\"\n    >\n      <th *ngFor=\"let dataCol of vm.dataCols\" cdkDrag cdkDragLockAxis=\"x\">\n        <div class=\"th-flex-container\">\n          <div>{{ dataCol }}</div>\n          <app-sortable [id]=\"dataCol\"></app-sortable>\n        </div>\n      </th>\n    </tr>\n    <tr>\n      <th *ngFor=\"let dataCol of vm.dataCols\">\n        <app-table-search [dataCol]=\"dataCol\"></app-table-search>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let dataRow of vm.dataRows\">\n      <td *ngFor=\"let dataCol of vm.dataCols\">{{ dataRow[dataCol] }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Directive, Output } from \"@angular/core\";\n\nimport { BehaviorSubject, combineLatest, Observable } from \"rxjs\";\nimport { debounceTime, map, switchMap } from \"rxjs/operators\";\n\nimport { SortableComponent } from \"../components/sortable/sortable.component\";\nimport { Sortings } from \"../models/sortings.model\";\n\n@Directive({\n  selector: \"[appSortables]\",\n})\nexport class SortablesDirective {\n  private _sortablesSource = new BehaviorSubject<SortableComponent[]>([]);\n  sortables$ = this._sortablesSource.asObservable();\n\n  get sortables() {\n    return this._sortablesSource.value;\n  }\n\n  @Output() sortingsChange: Observable<Sortings> = this.sortables$.pipe(\n    switchMap(sortables =>\n      combineLatest(\n        sortables.map(sortable =>\n          sortable.sorting$.pipe(map(sorting => (sortable.id ? { [sortable.id]: sorting } : {})))\n        )\n      )\n    ),\n    map(s => s.reduce((acc, curr) => ({ ...acc, ...curr }), {})),\n    debounceTime(100) // prevent useless item emissions\n  );\n\n  addSortable(sortable: SortableComponent): void {\n    if (this._sortablesSource.value.some(s => s.id === sortable.id)) {\n      throw new Error(\"SortableComponent with same id already added\");\n    }\n\n    this._sortablesSource.next([...this._sortablesSource.value.filter(s => s !== sortable), sortable]);\n  }\n\n  constructor() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Post } from \"./post.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PostsService {\n  constructor(private http: HttpClient) {}\n\n  getAll() {\n    return this.http.get<Post[]>(\"https://jsonplaceholder.typicode.com/posts\");\n  }\n}\n","import { createReducer, on } from \"@ngrx/store\";\nimport { Post } from \"../../services/json-placeholder/post.model\";\n\nimport * as postsActions from \"../actions/posts.actions\";\n\nexport const initialState: ReadonlyArray<Post> = [];\n\nexport const postsReducer = createReducer(\n  initialState,\n  on(postsActions.loadedSuccess, (_, { posts }) => [...posts])\n);\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { SortablesDirective } from \"./sortables/directives/sortables.directive\";\nimport { SortableComponent } from \"./sortables/components/sortable/sortable.component\";\n\n@NgModule({\n  declarations: [SortablesDirective, SortableComponent],\n  imports: [CommonModule],\n  exports: [SortablesDirective, SortableComponent],\n})\nexport class SharedModule {}\n","import { CdkDragDrop, copyArrayItem, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Injectable } from \"@angular/core\";\nimport { ComponentStore } from \"@ngrx/component-store\";\nimport { map, withLatestFrom } from \"rxjs/operators\";\n\nimport produce from \"immer\";\n\nexport type DataColName = string | number;\nexport type DataRow = Record<DataColName, unknown>;\nexport type Sorting = { dataCol: DataColName; sorting: \"none\" | \"asc\" | \"desc\" };\n\n/** Search term for a specific column */\nexport type SearchTerm = { dataCol: DataColName; term: string };\n\nexport interface TableState {\n  /** The actual data */\n  dataRows: ReadonlyArray<DataRow>;\n\n  /**\n   * Horizontal arrangement of columns from left to right;\n   */\n  dataCols: ReadonlyArray<DataColName>;\n\n  /** The search terms per column */\n  searchTerms: ReadonlyArray<SearchTerm>;\n\n  /** The sortings of the columns */\n  sortings: ReadonlyArray<Sorting>;\n}\n\n@Injectable()\nexport class TableStore extends ComponentStore<TableState> {\n  constructor() {\n    super({ dataRows: [], searchTerms: [], dataCols: [], sortings: [] });\n  }\n\n  hasSearchTerms$ = this.select(\n    ({ searchTerms }) => !!searchTerms.length && searchTerms.some(searchTerm => searchTerm.term)\n  );\n  hasSortings$ = this.select(\n    ({ sortings }) => !!sortings.length && sortings.some(sorting => sorting.sorting !== \"none\")\n  );\n\n  searchTerms$ = this.select(({ searchTerms }) => searchTerms);\n\n  dataCols$ = this.select(({ dataCols }) => dataCols);\n  dataRows$ = this.select(({ dataRows, searchTerms, sortings }) => ({\n    dataRows,\n    searchTerms,\n    sortings,\n  })).pipe(\n    withLatestFrom(this.hasSearchTerms$, this.hasSortings$),\n    map(([{ dataRows, searchTerms, sortings }, hasSearchTerms, hasSortings]) => {\n      // To increase performance, sorting and/or filtering are only applied if necessary\n\n      if (hasSearchTerms && hasSortings) {\n        return [...dataRows.filter(this._filterWithSearchTerms(searchTerms))].sort(this._sortWithSortings(sortings));\n      }\n\n      if (hasSearchTerms) {\n        return dataRows.filter(this._filterWithSearchTerms(searchTerms));\n      }\n\n      if (hasSortings) {\n        return [...dataRows].sort(this._sortWithSortings(sortings));\n      }\n\n      return dataRows;\n    })\n  );\n\n  updateDataRows = this.updater((state, dataRows: DataRow[]) => {\n    const dataCols = Object.keys(dataRows[0] || {});\n\n    return {\n      ...state,\n      dataRows,\n      dataCols,\n      searchTerms: dataCols.map(dataCol => ({ dataCol, term: \"\" })),\n    };\n  });\n  moveDataCol = this.updater((state, movement: { previousIndex: number; currentIndex: number }) => ({\n    ...state,\n    dataCols: produce(state.dataCols, draftDataCols =>\n      moveItemInArray(draftDataCols, movement.previousIndex, movement.currentIndex)\n    ),\n  }));\n  updateSearchTerm = this.updater((state, searchTerm: SearchTerm) => {\n    return {\n      ...state,\n      searchTerms: state.searchTerms.reduce<SearchTerm[]>((acc, curr) => {\n        if (curr.dataCol === searchTerm.dataCol) {\n          return [...acc, searchTerm];\n        }\n\n        return [...acc, curr];\n      }, []),\n    };\n  });\n  updateSorting = this.updater((state, sortings: Sorting[]) => ({ ...state, sortings }));\n\n  vm$ = this.select(this.dataRows$, this.dataCols$, this.searchTerms$, (dataRows, dataCols, searchTerms) => ({\n    dataRows,\n    dataCols,\n    searchTerms: dataCols.map(\n      // Make sure that there is an entry for each column (even if the term is empty)\n      dataCol => searchTerms.find(searchTerm => searchTerm.dataCol === dataCol) || { dataCol, term: \"\" }\n    ),\n  }));\n\n  _searchTermOfCol(searchTerms: readonly SearchTerm[], col: DataColName) {\n    return searchTerms.find(searchTerm => searchTerm.dataCol === col)?.term || \"\";\n  }\n\n  _filterWithSearchTerms(searchTerms: readonly SearchTerm[]) {\n    // TODO: filtering can be improved b/c keeps on checking rows that are\n    // already filtered out\n\n    return (dataRow: DataRow) =>\n      Object.entries(dataRow)\n        .map(([dataColName, cell]) => ({\n          cell,\n          colSearchTerm: this._searchTermOfCol(searchTerms, dataColName),\n        }))\n        .filter(({ colSearchTerm }) => colSearchTerm)\n        .every(({ colSearchTerm, cell }) => {\n          if (typeof cell === \"string\") {\n            return cell.includes(colSearchTerm);\n          }\n\n          if (typeof cell === \"number\") {\n            // TODO: type casting might fail?\n            return cell === +colSearchTerm;\n          }\n\n          // If the cell is of some other type show it, b/c searching through\n          // it is not straightforward\n          return true;\n        });\n  }\n\n  private _sortWithSortings(sortings: readonly Sorting[]) {\n    return (a: DataRow, b: DataRow) => {\n      // NOTE: only sorting by single column supported\n      const { dataCol, sorting } = sortings.find(({ sorting }) => sorting !== \"none\") || {};\n\n      if (!dataCol || !sorting || sorting === \"none\") {\n        return 0;\n      }\n\n      const switcher = sorting === \"asc\" ? 1 : -1;\n\n      // Sort numbers and strings only, everything else is not straightforward\n      if (\n        (typeof a[dataCol] === \"number\" || typeof a[dataCol] === \"string\") &&\n        (typeof b[dataCol] === \"number\" || typeof b[dataCol] === \"string\")\n      ) {\n        if ((a[dataCol] as number | string) < (b[dataCol] as number | string)) {\n          return -1 * switcher;\n        }\n\n        if ((a[dataCol] as number | string) > (b[dataCol] as number | string)) {\n          return 1 * switcher;\n        }\n      }\n\n      return 0;\n    };\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { Post } from \"./services/json-placeholder/post.model\";\n\nimport * as postsActions from \"./store/actions/posts.actions\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  posts$: Observable<Post[]> = this.store.select(state => state.posts);\n\n  ngOnInit() {\n    this.store.dispatch(postsActions.load());\n  }\n\n  constructor(private store: Store<{ posts: Post[] }>) {}\n}\n","<div class=\"container\">\n  <app-table [dataRows]=\"posts$ | async\"></app-table>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TableComponent } from \"./table.component\";\nimport { TableSearchComponent } from \"./components/table-search/table-search.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { SharedModule } from \"../../shared/shared.module\";\n\n@NgModule({\n  declarations: [TableComponent, TableSearchComponent],\n  exports: [TableComponent],\n  imports: [CommonModule, FormsModule, DragDropModule, SharedModule],\n})\nexport class TableModule {}\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from \"./app.component\";\nimport { TableModule } from \"./components/table/table.module\";\n\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { PostsEffects } from \"./store/effects/posts.effects\";\nimport { postsReducer } from \"./store/reducers/posts.reducer\";\nimport { SharedModule } from \"./shared/shared.module\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    StoreModule.forRoot({ posts: postsReducer }),\n    EffectsModule.forRoot([PostsEffects]),\n    TableModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from \"@angular/core\";\nimport { map } from \"rxjs/operators\";\n\nimport { DataColName, TableStore } from \"../../table.store\";\n\n@Component({\n  selector: \"app-table-search\",\n  templateUrl: \"./table-search.component.html\",\n  styleUrls: [\"./table-search.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableSearchComponent implements OnInit {\n  @Input()\n  dataCol: DataColName = \"\";\n\n  searchTerm$ = this.tableStore.searchTerms$.pipe(\n    map(searchTerms => searchTerms.find(searchTerm => searchTerm.dataCol === this.dataCol)?.term || \"\")\n  );\n  onSearchTermChanged(value: string) {\n    this.tableStore.updateSearchTerm({ dataCol: this.dataCol, term: value });\n  }\n\n  constructor(private tableStore: TableStore) {}\n\n  ngOnInit(): void {}\n}\n","<!--\n  TODO: set type of input according to data in column i.e., `text` or `number`\n-->\n<input\n  [ngModel]=\"searchTerm$ | async\"\n  (ngModelChange)=\"onSearchTermChanged($event)\"\n  [attr.aria-label]=\"'search-' + dataCol\"\n  type=\"text\"\n  placeholder=\"Search...\"\n/>\n<!--\n  TODO: add button to clear search term <17-04-21, niklaas>\n-->\n","import { createAction, props } from \"@ngrx/store\";\nimport { Post } from \"../../services/json-placeholder/post.model\";\n\nexport const load = createAction(\"[Posts] Load\");\nexport const loadedSuccess = createAction(\"[Posts] Loaded Success\", props<{ posts: Post[] }>());\nexport const loadedError = createAction(\"[Posts] Loaded Error\");\n","import { ChangeDetectionStrategy, Component, HostListener, Input, OnInit, Optional, SkipSelf } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { SortablesDirective } from \"../../directives/sortables.directive\";\nimport { Sorting } from \"../../models/sorting.model\";\n\n@Component({\n  selector: \"app-sortable\",\n  templateUrl: \"./sortable.component.html\",\n  styleUrls: [\"./sortable.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    \"[class.sort-asc]\": \"_sortingSource.value === 'asc'\",\n    \"[class.sort-desc]\": \"_sortingSource.value === 'desc'\",\n  },\n})\nexport class SortableComponent implements OnInit {\n  @Input() id: string | number | undefined;\n\n  private _sortingSource = new BehaviorSubject<Sorting>(\"none\");\n  sorting$ = this._sortingSource.asObservable();\n\n  @HostListener(\"click\")\n  onClick(): void {\n    this.toggleSorting();\n  }\n\n  ngOnInit(): void {\n    if (!this.id) {\n      throw new Error(\"SortableComponent requires property `id` to be set\");\n    }\n\n    if (this.container) {\n      this.container.addSortable(this);\n    }\n  }\n\n  toggleSorting(): void {\n    this._resetSortingOfSiblings();\n\n    if (this._sortingSource.value === \"asc\") {\n      this._sortingSource.next(\"desc\");\n      return;\n    }\n\n    if (this._sortingSource.value === \"desc\") {\n      this._sortingSource.next(\"none\");\n      return;\n    }\n\n    this._sortingSource.next(\"asc\");\n  }\n\n  private _resetSorting(): void {\n    this._sortingSource.next(\"none\");\n  }\n\n  private _resetSortingOfSiblings(): void {\n    this.container.sortables.filter(sortable => sortable !== this).forEach(sortable => sortable._resetSorting());\n  }\n\n  constructor(@Optional() @SkipSelf() public container: SortablesDirective) {}\n}\n","<ng-container [ngSwitch]=\"sorting$ | async\">\n  <span *ngSwitchCase=\"'asc'\">&darr;</span>\n  <span *ngSwitchCase=\"'desc'\">&uarr;</span>\n  <span *ngSwitchDefault>&#8597;</span>\n</ng-container>\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}